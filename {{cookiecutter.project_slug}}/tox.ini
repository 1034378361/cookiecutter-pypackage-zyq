[tox]
isolated_build = True
envlist = py38, py39, py310, py311, py312, lint, docs
parallel = true
requires =
    tox>=4.0
    tox-poetry>=0.4.1

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.12: lint, docs

[testenv:lint]
skip_install = true
allowlist_externals = poetry
commands_pre = poetry install --no-root --sync --only dev
commands =
    poetry run ruff check {toxinidir}/src {toxinidir}/tests
    poetry run ruff format --check {toxinidir}/src {toxinidir}/tests
    poetry run black --check {toxinidir}/src {toxinidir}/tests
    poetry run isort --check {toxinidir}/src {toxinidir}/tests
    poetry run mypy {toxinidir}/src
    # 检查调试语句
    bash -c "! grep -r 'import pdb' {toxinidir}/src {toxinidir}/tests"
    bash -c "! grep -r 'breakpoint()' {toxinidir}/src {toxinidir}/tests"
    # 检查合并冲突
    bash -c "! grep -r '<<<<<<< HEAD' {toxinidir}/src {toxinidir}/tests {toxinidir}/docs"

[testenv:docs]
skip_install = true
allowlist_externals = poetry
commands_pre = poetry install --no-root --sync --with dev
commands =
    poetry run sphinx-build -b html {toxinidir}/docs {toxinidir}/docs/_build/html

[testenv]
skip_install = true
allowlist_externals = poetry
setenv =
    PYTHONPATH = {toxinidir}
passenv =
    HOME
    PYTHONPATH
commands_pre = poetry install --no-root --sync --with dev
commands =
    poetry run pytest --cov=src --cov-report=term --cov-report=xml --cov-fail-under=85 {posargs:tests}
