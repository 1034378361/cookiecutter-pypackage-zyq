[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_short_description}}"
readme = "README.rst"
authors = [
  {name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}"}
]
maintainers = [
  {name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: {{cookiecutter.open_source_license}}",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = {text = "{{cookiecutter.open_source_license}}"}
requires-python = ">={{cookiecutter.python_min_version}}"
dependencies = [
  {% if cookiecutter.command_line_interface.lower() == "typer" -%}
  "typer>=0.9.0",
  {%- endif %}
  {% if cookiecutter.dependency_rich == 'y' -%}
  "rich>=10.0.0",
  {%- endif %}
  {% if cookiecutter.dependency_pyyaml == 'y' -%}
  "pyyaml>=6.0",
  {%- endif %}
]

[project.optional-dependencies]
dev = [
    "coverage",  # testing
    "mypy>=1.16.0",  # linting
    "pytest",  # testing
    "ruff>=0.11.0",  # linting
    "black>=25.1.0",  # formatting
    "isort>=6.0.1",  # import sorting
    "sphinx",  # documentation
    "sphinx-rtd-theme",  # documentation theme
    "sphinx-autodoc-typehints>=1.25.2",  # 类型提示支持
    "pytest-cov",  # test coverage
    "pre-commit>=3.6.0",  # git hooks
    "bandit>=1.8.3",  # security checks
    "gitpython>=3.1.40",  # git操作，用于changelog生成
    "mypy-html>=1.4.0",  # 类型检查报告生成器
    "types-PyYAML",  # PyYAML类型提示
    "types-requests",  # requests类型提示
    "types-setuptools",  # setuptools类型提示
    "types-toml",  # toml类型提示
]

[project.urls]
bugs = "https://github.com/{{cookiecutter.__gh_slug}}/issues"
changelog = "https://github.com/{{cookiecutter.__gh_slug}}/blob/master/CHANGELOG.md"
homepage = "https://github.com/{{cookiecutter.__gh_slug}}"
documentation = "https://{{cookiecutter.project_slug}}.readthedocs.io/"
repository = "https://github.com/{{cookiecutter.__gh_slug}}"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
"*" = ["*.*"]

{% if cookiecutter.command_line_interface.lower() == "typer" %}
[project.scripts]
{{cookiecutter.project_slug}} = "{{cookiecutter.project_slug}}.cli:app"
{% endif %}

# Mypy
# ----
[tool.mypy]
files = "src"
python_version = "{{cookiecutter.python_min_version.replace('.', '')}}"
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true
disable_error_code = "attr-defined"

# Black
# -----
[tool.black]
line-length = 88
target-version = ["py{{cookiecutter.python_min_version.replace('.', '')}}"]
include = '\.pyi?$'

# Ruff
# ----
[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "I",  # isort
    "D",  # pydocstyle
]
ignore = ["E203"]  # whitespace before ':'
line-length = 88
target-version = "py{{cookiecutter.python_min_version.replace('.', '')}}"

[tool.ruff.pydocstyle]
convention = "google"
ignore = ["D107", "D203", "D213", "D401"]

# Isort
# -----
[tool.isort]
profile = "black"
line_length = 88
skip_gitignore = true

# Pytest
# ------
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
# 测试覆盖率配置
addopts = "--cov=src --cov-report=term --cov-report=html --cov-report=xml"
# 设置最低覆盖率阈值
[tool.coverage.report]
fail_under = 85
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

# Bandit
# ------
[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B311"]  # 忽略标准库伪随机数生成器警告

